{"ast":null,"code":"var _jsxFileName = \"/Users/hackinghunter/Desktop/1.maxlence react js/tools/src/modules/MaxHr/components/Pages/Settings/pages/DashboardSetup.jsx\";\nimport TopPageTitle from \"../../../../../common/components/topPageTitle/Index\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport IconApp from \"../../../../../common/components/img/Img\";\nimport Icon from \"../../../../../../pics/drag.png\";\nimport Icon2 from \"../../../../../../pics/color.png\";\nimport { useState } from \"react\";\nimport useClickOutside from \"../../../../CustomHooks/ClickOutside\";\nimport { SketchPicker } from \"react-color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DashboardSetup = () => {\n  const options = [{\n    value: \"today\",\n    label: \"today\"\n  }, {\n    value: \"tomorrow\",\n    label: \"tomorrow\"\n  }, {\n    value: \"last week\",\n    label: \"last week\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_container\",\n      children: [/*#__PURE__*/_jsxDEV(TopPageTitle, {\n        TitleLink: -1,\n        TilelIcon: /*#__PURE__*/_jsxDEV(BsArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 22\n        }, this),\n        Name: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_setup_top_main_div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_setup_top_main_div_inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard_setup_title\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Show data on Dashboard by\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard_setup_text_div\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dashboard_setup_select_div\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dashboard_top_week_Select\",\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    options: options,\n                    placeholder: \"This week\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DashboardSetupData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = DashboardSetup;\n\nconst DashboardSetupData = () => {\n  var _s = $RefreshSig$();\n\n  const DashboardSetupDataApp = props => {\n    _s();\n\n    const [ColorPicker, setColorPicker] = useState(false);\n\n    const ColorPickerOpen = () => {\n      setColorPicker(!ColorPicker);\n    };\n\n    let domNode = useClickOutside(() => {\n      setColorPicker(false);\n    });\n\n    const SettingOptions = _ref => {\n      let {\n        val\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_setup_text_div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row dashboard_setup_icon_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"automation_checkbox_div\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  id: val.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label automation_checkbox_label\",\n                  htmlFor: val.id,\n                  children: val.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(IconApp, {\n                className: \"dashboard_setup_icon\",\n                backgroundImage: Icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconApp, {\n                className: \"dashboard_setup_icon\",\n                backgroundImage: Icon2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: ColorPickerOpen,\n                className: \"dashboard_setup_color\",\n                style: {\n                  backgroundColor: val.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: domNode,\n                children: ColorPicker ? /*#__PURE__*/_jsxDEV(SketchPicker, {\n                  className: \"color_picker2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_setup_title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"dashboard_setup_title_inner\",\n            children: [props.toptitle, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(IconApp, {\n                className: \"dashboard_setup_icon\",\n                backgroundImage: Icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), props.arr.cat1.map((val, i) => {\n          return /*#__PURE__*/_jsxDEV(SettingOptions, {\n            val: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  _s(DashboardSetupDataApp, \"tRq83fbPmtEPnQnX6iIzfZMrJYs=\", false, function () {\n    return [useClickOutside];\n  });\n\n  const DashboardSetupDataData = [{\n    toptitle: \"Company Setup\",\n    cat1: [{\n      label: \"Company Setup\",\n      color: \"#0043CE\",\n      id: \"1\"\n    }, {\n      label: \"Onboarding new Employee\",\n      color: \"#F1C21B\",\n      id: \"2\"\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: DashboardSetupDataData.map((val, i) => {\n      return /*#__PURE__*/_jsxDEV(DashboardSetupDataApp, {\n        toptitle: val.toptitle,\n        arr: val\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c2 = DashboardSetupData;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DashboardSetup\");\n$RefreshReg$(_c2, \"DashboardSetupData\");","map":{"version":3,"sources":["/Users/hackinghunter/Desktop/1.maxlence react js/tools/src/modules/MaxHr/components/Pages/Settings/pages/DashboardSetup.jsx"],"names":["TopPageTitle","BsArrowLeft","React","Select","IconApp","Icon","Icon2","useState","useClickOutside","SketchPicker","DashboardSetup","options","value","label","DashboardSetupData","DashboardSetupDataApp","props","ColorPicker","setColorPicker","ColorPickerOpen","domNode","SettingOptions","val","id","backgroundColor","color","i","toptitle","arr","cat1","map","DashboardSetupDataData"],"mappings":"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","sourcesContent":["import TopPageTitle from \"../../../../../common/components/topPageTitle/Index\";\nimport { BsArrowLeft } from \"react-icons/bs\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport IconApp from \"../../../../../common/components/img/Img\";\nimport Icon from \"../../../../../../pics/drag.png\";\nimport Icon2 from \"../../../../../../pics/color.png\";\nimport { useState } from \"react\";\nimport useClickOutside from \"../../../../CustomHooks/ClickOutside\";\nimport { SketchPicker } from \"react-color\";\n\nexport const DashboardSetup = () => {\n  const options = [\n    { value: \"today\", label: \"today\" },\n    { value: \"tomorrow\", label: \"tomorrow\" },\n    { value: \"last week\", label: \"last week\" },\n  ];\n  return (\n    <>\n      <div className=\"custom_container\">\n        <TopPageTitle\n          TitleLink={-1}\n          TilelIcon={<BsArrowLeft />}\n          Name=\"Settings\"\n        />\n        <div className=\"dashboard_setup_top_main_div\">\n          <div className=\"dashboard_setup_top_main_div_inner\">\n            <div>\n              <div className=\"dashboard_setup_title\">\n                <h3>Show data on Dashboard by</h3>\n              </div>\n              <div className=\"dashboard_setup_text_div\">\n                <div className=\"dashboard_setup_select_div\">\n                  <div className=\"dashboard_top_week_Select\">\n                    <Select options={options} placeholder=\"This week\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <DashboardSetupData />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nconst DashboardSetupData = () => {\n  const DashboardSetupDataApp = (props) => {\n    const [ColorPicker, setColorPicker] = useState(false);\n    const ColorPickerOpen = () => {\n      setColorPicker(!ColorPicker);\n    };\n    let domNode = useClickOutside(() => {\n      setColorPicker(false);\n    });\n\n    const SettingOptions = ({ val }) => {\n      return (\n        <div key={i} className=\"dashboard_setup_text_div\">\n          <div className=\"row dashboard_setup_icon_div\">\n            <div className=\"col-8\">\n              <div className=\"automation_checkbox_div\">\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id={val.id}\n                  />\n                  <label\n                    className=\"form-check-label automation_checkbox_label\"\n                    htmlFor={val.id}\n                  >\n                    {val.label}\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-4\">\n              <div className=\" d-flex\">\n                <IconApp\n                  className=\"dashboard_setup_icon\"\n                  backgroundImage={Icon}\n                />\n                <IconApp\n                  className=\"dashboard_setup_icon\"\n                  backgroundImage={Icon2}\n                />\n                <div\n                  onClick={ColorPickerOpen}\n                  className=\"dashboard_setup_color\"\n                  style={{ backgroundColor: val.color }}\n                ></div>\n                <div ref={domNode}>\n                  {ColorPicker ? (\n                    <SketchPicker className=\"color_picker2\" />\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    return (\n      <>\n        <div>\n          <div className=\"dashboard_setup_title\">\n            <h3 className=\"dashboard_setup_title_inner\">\n              {props.toptitle}\n              <span>\n                <IconApp\n                  className=\"dashboard_setup_icon\"\n                  backgroundImage={Icon}\n                />\n              </span>\n            </h3>\n          </div>\n          {props.arr.cat1.map((val, i) => {\n            return <SettingOptions val={val} />;\n          })}\n        </div>\n      </>\n    );\n  };\n  const DashboardSetupDataData = [\n    {\n      toptitle: \"Company Setup\",\n      cat1: [\n        {\n          label: \"Company Setup\",\n          color: \"#0043CE\",\n          id: \"1\",\n        },\n        {\n          label: \"Onboarding new Employee\",\n          color: \"#F1C21B\",\n          id: \"2\",\n        },\n      ],\n    },\n  ];\n  return (\n    <>\n      {DashboardSetupDataData.map((val, i) => {\n        return (\n          <DashboardSetupDataApp key={i} toptitle={val.toptitle} arr={val} />\n        );\n      })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}