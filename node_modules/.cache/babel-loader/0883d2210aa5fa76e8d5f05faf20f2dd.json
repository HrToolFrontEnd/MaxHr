{"ast":null,"code":"var _jsxFileName = \"/Users/hackinghunter/Desktop/1.maxlence react js/tools/src/modules/MaxHr/components/TopNavbar/Submenus/NotificationCard/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport Card from \"./Card\";\nimport Notification from \"../../../../../../pics/profile.jpeg\";\nimport { MdNotifications } from \"react-icons/md\";\nimport { BsFillChatLeftFill } from \"react-icons/bs\";\nimport styles from \"./Notifications.module.scss\";\nimport { useState } from \"react\";\nimport useClickOutside from \"../../../../CustomHooks/ClickOutside\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  const [isNotificationsOpen, setisNotificationsOpen] = useState(false);\n  let domNode = useClickOutside(() => {\n    setisNotificationsOpen(false);\n  });\n  const CardData = [{\n    img: Notification,\n    name: \"Gaurav Kaushik\",\n    text: \"I have bought a new car\",\n    time: \"3 Seconds ago\"\n  }, {\n    img: Notification,\n    name: \"Gaurav Kaushik\",\n    text: \"I have bought a new car\",\n    time: \"3 Seconds ago\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"messages_icon_top_nav\",\n        to: \"messages\",\n        \"data-bs-toggle\": \"tooltip\",\n        \"data-bs-placement\": \"top\",\n        title: \"Messages\",\n        children: /*#__PURE__*/_jsxDEV(BsFillChatLeftFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: domNode,\n      className: `${styles.icon_container} ${styles.notifications_container} ${isNotificationsOpen ? styles.icon_active : undefined}`,\n      onClick: () => {\n        setisNotificationsOpen(!isNotificationsOpen);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" position-relative\",\n        \"data-bs-toggle\": \"tooltip\",\n        \"data-bs-placement\": \"top\",\n        title: \"Notification\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"position-absolute top-0 start-100 translate-middle badge badge_top rounded-circle bg-danger\",\n          children: [\"99+\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"unread messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdNotifications, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.submenu} ${isNotificationsOpen ? styles.submenu_active : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.title,\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.notifications,\n          children: CardData.map((val, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              img: val.img,\n              name: val.name,\n              text: val.text,\n              time: val.time\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"/zlcbqAl735Sluck+ihgPZADs0Y=\", false, function () {\n  return [useClickOutside];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/hackinghunter/Desktop/1.maxlence react js/tools/src/modules/MaxHr/components/TopNavbar/Submenus/NotificationCard/Index.jsx"],"names":["Card","Notification","MdNotifications","BsFillChatLeftFill","styles","useState","useClickOutside","NavLink","Index","props","isNotificationsOpen","setisNotificationsOpen","domNode","CardData","img","name","text","time","icon_container","notifications_container","icon_active","undefined","submenu","submenu_active","title","notifications","map","val","i"],"mappings":"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","sourcesContent":["import Card from \"./Card\";\nimport Notification from \"../../../../../../pics/profile.jpeg\";\nimport { MdNotifications } from \"react-icons/md\";\nimport { BsFillChatLeftFill } from \"react-icons/bs\";\nimport styles from \"./Notifications.module.scss\";\nimport { useState } from \"react\";\nimport useClickOutside from \"../../../../CustomHooks/ClickOutside\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Index = (props) => {\n  const [isNotificationsOpen, setisNotificationsOpen] = useState(false);\n  let domNode = useClickOutside(() => {\n    setisNotificationsOpen(false);\n  });\n  const CardData = [\n    {\n      img: Notification,\n      name: \"Gaurav Kaushik\",\n      text: \"I have bought a new car\",\n      time: \"3 Seconds ago\",\n    },\n    {\n      img: Notification,\n      name: \"Gaurav Kaushik\",\n      text: \"I have bought a new car\",\n      time: \"3 Seconds ago\",\n    },\n  ];\n  return (\n    <>\n      <div>\n        <NavLink\n          className=\"messages_icon_top_nav\"\n          to=\"messages\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Messages\"\n        >\n          <BsFillChatLeftFill />\n        </NavLink>\n      </div>\n      <div\n        ref={domNode}\n        className={`${styles.icon_container} ${\n          styles.notifications_container\n        } ${isNotificationsOpen ? styles.icon_active : undefined}`}\n        onClick={() => {\n          setisNotificationsOpen(!isNotificationsOpen);\n        }}\n      >\n        <div\n          className=\" position-relative\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Notification\"\n        >\n          <span className=\"position-absolute top-0 start-100 translate-middle badge badge_top rounded-circle bg-danger\">\n            99+\n            <span className=\"visually-hidden\">unread messages</span>\n          </span>\n          <MdNotifications />\n        </div>\n\n        {/* INBOX SUBMENU */}\n        <div\n          className={`${styles.submenu} ${\n            isNotificationsOpen ? styles.submenu_active : \"\"\n          }`}\n        >\n          <h3 className={styles.title}>Notifications</h3>\n          <div className={styles.notifications}>\n            {CardData.map((val, i) => {\n              return (\n                <Card\n                  key={i}\n                  img={val.img}\n                  name={val.name}\n                  text={val.text}\n                  time={val.time}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}