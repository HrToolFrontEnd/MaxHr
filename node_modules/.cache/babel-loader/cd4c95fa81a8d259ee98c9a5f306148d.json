{"ast":null,"code":"var _jsxFileName = \"/Users/hackinghunter/Desktop/1.maxlence react js/MaxHr/src/modules/Manager/components/pages/Dashboard/page/CircularStatic.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircularProgressWithLabel = props => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      display: \"inline-flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: \"absolute\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"text.secondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CircularProgressWithLabel;\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number.isRequired\n};\nexport const CircularStatic = () => {\n  _s();\n\n  const [progress, setProgress] = React.useState(10);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 1);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Box, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CircularStatic, \"FXkwgvVY0uqjEY9M9pBwGohlXgA=\");\n\n_c2 = CircularStatic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"CircularStatic\");","map":{"version":3,"sources":["/Users/hackinghunter/Desktop/1.maxlence react js/MaxHr/src/modules/Manager/components/pages/Dashboard/page/CircularStatic.jsx"],"names":["React","PropTypes","CircularProgress","Typography","Box","CircularProgressWithLabel","props","position","display","top","left","bottom","right","alignItems","justifyContent","Math","round","value","propTypes","number","isRequired","CircularStatic","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval","width"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AACA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAC3C,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAAT;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAC,aAA1B;AAAA,SAA4CF;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,GAAG,EAAE,CADH;AAEFC,QAAAA,IAAI,EAAE,CAFJ;AAGFC,QAAAA,MAAM,EAAE,CAHN;AAIFC,QAAAA,KAAK,EAAE,CAJL;AAKFL,QAAAA,QAAQ,EAAE,UALR;AAMFC,QAAAA,OAAO,EAAE,MANP;AAOFK,QAAAA,UAAU,EAAE,QAPV;AAQFC,QAAAA,cAAc,EAAE;AARd,OADN;AAAA,6BAYE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAA8B,QAAA,SAAS,EAAC,KAAxC;AAA8C,QAAA,KAAK,EAAC,gBAApD;AAAA,kBACI,GAAEC,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACW,KAAjB,CAAwB;AAD9B;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;KAAMZ,yB;AAwBNA,yBAAyB,CAACa,SAA1B,GAAsC;AACpC;AACF;AACA;AACA;AACA;AACED,EAAAA,KAAK,EAAEhB,SAAS,CAACkB,MAAV,CAAiBC;AANY,CAAtC;AASA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACwB,QAAN,CAAe,EAAf,CAAhC;AAEAxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BJ,MAAAA,WAAW,CAAEK,YAAD,IACVA,YAAY,IAAI,GAAhB,GAAsB,CAAtB,GAA0BA,YAAY,GAAG,CADhC,CAAX;AAGD,KAJwB,EAItB,GAJsB,CAAzB;AAKA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GATD,EASG,EATH;AAWA;;AACA;AAAA,UAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA,4BACE,QAAC,yBAAD;AAA2B,MAAA,KAAK,EAAER;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,yBAAD;AAA2B,MAAA,KAAK,EAAEA;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAID,CAnBM;;GAAMD,c;;MAAAA,c","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: \"absolute\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n          {`${Math.round(props.value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport const CircularStatic = () => {\n  const [progress, setProgress] = React.useState(10);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 1\n      );\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return;\n  <Box sx={{ width: \"100%\" }}>\n    <CircularProgressWithLabel value={progress} />\n    <CircularProgressWithLabel value={progress} />;\n  </Box>;\n};\n"]},"metadata":{},"sourceType":"module"}